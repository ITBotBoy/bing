{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useRouter } from \"next/router\";\nimport { useState, useEffect, useRef } from 'react';\nimport { message, Spin } from \"antd\";\nimport moment from \"moment\";\nimport '../styles/[date].scss';\nimport DownDialog from \"../components/downDialog\";\nimport Error from 'next/error';\nimport maxBy from 'lodash/maxBy';\nimport minBy from 'lodash/minBy';\nimport axios from \"axios\";\nimport throttle from \"lodash/throttle\";\nimport Head from \"../components/Head\";\nimport processHTML from \"next/dist/next-server/lib/post-process\"; // import axios from \"axios\";\n// import throttle from \"lodash/throttle\";\n\nexport async function getServerSideProps(context) {\n  // 维护一份文件索引length表\n  const {\n    imgArr,\n    tomorrow\n  } = global;\n  const {\n    date\n  } = context.query; // 抽取随机数进行随机，接口返回最大数量的随机数\n\n  let key = date;\n  const minDate = minBy(imgArr, 'date');\n  const maxDate = maxBy(imgArr, 'date');\n\n  if (date === 'random') {\n    const index = Math.floor(Math.random() * imgArr.length);\n    key = imgArr[index].date;\n  }\n\n  return {\n    props: {\n      minDate,\n      maxDate,\n      img: imgArr[key] || {},\n      timeout: tomorrow - moment() + 5000,\n      nextKey: tomorrow.format('YYYYMMDD')\n    }\n  };\n}\nexport default function date({\n  minDate,\n  maxDate,\n  img = {},\n  timeout,\n  nextKey\n}) {\n  const router = useRouter();\n  const {\n    0: loading,\n    1: updateLoading\n  } = useState(true);\n  const {\n    0: showBottom,\n    1: updateShowBottom\n  } = useState(true);\n  const {\n    0: now,\n    1: updateNow\n  } = useState(new Date().valueOf());\n  const {\n    0: downDialogVisible,\n    1: setDownDialogVisible\n  } = useState(false);\n  const {\n    0: isMobile,\n    1: setIsMobile\n  } = useState(false);\n  const {\n    0: likeList,\n    1: setLikeList\n  } = useState([]);\n\n  const checkMode = () => {\n    if (window.innerWidth < 1024 || window.innerWidth < window.innerHeight) {\n      setIsMobile(true);\n    } else {\n      setIsMobile(false);\n    }\n  }; // likeFun\n\n\n  const likeFun = data => {\n    let localLikeList = window.localStorage.getItem('localLikeList');\n\n    if (!likeList.length && localLikeList) {\n      setLikeList(JSON.parse(localLikeList));\n    }\n\n    if (data) {\n      localLikeList = localLikeList ? JSON.parse(localLikeList) : [];\n\n      if (!localLikeList.includes(data)) {\n        axios(`/api/sort?date=${data}&k=likeCount`).then(res => {\n          if (res.data.likeCount) {\n            localLikeList.push(data);\n            setLikeList(localLikeList);\n            window.localStorage.setItem('localLikeList', JSON.stringify(localLikeList));\n          }\n        });\n      }\n    }\n  };\n\n  const throttleLikeFun = throttle(data => likeFun(data), 1500);\n\n  const downloadFun = data => {\n    if (data) {\n      axios(`/api/sort?date=${data}&k=downloadCount`);\n    }\n  }; // did mount\n\n\n  const loadingImg = useRef();\n  useEffect(() => {\n    likeFun(); // 图片加载完成就取消 loading\n\n    if (loadingImg.current && loadingImg.current.complete) {\n      updateLoading(false);\n    }\n\n    checkMode();\n\n    window.onkeyup = ({\n      keyCode\n    }) => {\n      switch (keyCode) {\n        case 32:\n          return window.location = `/random`;\n\n        /*const date = Math.floor(Math.random() * (maxDate-minDate))+minDate;\r\n        changePosition(date);*/\n\n        case 37:\n        case 39:\n          changePosition({\n            37: 'prev',\n            39: 'next'\n          }[keyCode]);\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    window.onresize = checkMode;\n    setTimeout(() => {\n      !img.next && (img.next = nextKey);\n    }, timeout);\n  }, []); // 前后切换\n\n  const changePosition = key => {\n    if (!img[key]) {\n      return message.warning({\n        prev: '没有更早的辣！',\n        next: '已经是最新的辣！'\n      }[key]);\n    }\n\n    updateLoading(true);\n    window.location = `/${img[key]}`;\n  }; // 移动鼠标，显示底下区域\n\n\n  const onMouseMove = () => {\n    updateShowBottom(true);\n    updateNow(new Date().valueOf());\n  };\n\n  useEffect(() => {\n    const tick = setTimeout(() => updateShowBottom(false), 3500);\n    return () => {\n      clearTimeout(tick);\n    };\n  }, [now]);\n  const imgDate = moment(String(img.date), 'YYYYMMDD');\n  return img.date ? /*#__PURE__*/_jsxs(Spin, {\n    spinning: loading,\n    size: \"large\",\n    children: [/*#__PURE__*/_jsx(Head, {}), /*#__PURE__*/_jsxs(\"div\", {\n      className: `detail-page ${isMobile && 'mobile-mode'}`,\n      onMouseMove: onMouseMove,\n      children: [/*#__PURE__*/_jsx(\"img\", {\n        className: \"loading-img\",\n        ref: loadingImg,\n        src: `//cn.bing.com${img.urlbase}_${isMobile ? '768x1280' : '1920x1080'}.jpg`,\n        onLoad: () => updateLoading(false)\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"img-content-box\",\n        style: {\n          backgroundImage: `url(//cn.bing.com${img.urlbase}_${isMobile ? '768x1280' : '1920x1080'}.jpg)`\n        },\n        children: [[{\n          key: 'prev',\n          arrow: 'left'\n        }, {\n          key: 'next',\n          arrow: 'right'\n        }].map(({\n          key,\n          arrow\n        }) => img[key] ? /*#__PURE__*/_jsx(\"div\", {\n          className: `page-icon icon-${arrow} ${(showBottom || isMobile) && 'actived'}`,\n          onClick: () => changePosition(key),\n          children: /*#__PURE__*/_jsx(\"i\", {\n            className: `iconfont icon-arrow-${arrow}`\n          })\n        }, `page-${arrow}`) : ''), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"img-info\",\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"img-date\",\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: \"img-date-year\",\n              children: imgDate.format('YY')\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: \"img-date-md\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                children: imgDate.format('MM')\n              }), /*#__PURE__*/_jsx(\"div\", {\n                children: imgDate.format('DD')\n              })]\n            })]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"img-cp\",\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: \"img-cp-txt\",\n              children: img.cp\n            })\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: `bottom-info ${showBottom && 'actived'}`,\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: \"icon-list\",\n            children: [/*#__PURE__*/_jsx(\"a\", {\n              href: \"/\",\n              className: \"iconfont icon-bing\"\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: (likeList.includes(img.date) ? 'icon-like-fill' : 'icon-xihuan') + ' iconfont',\n              onClick: () => throttleLikeFun(img.date)\n            }), \")\", /*#__PURE__*/_jsx(\"div\", {\n              className: \"iconfont icon-download\",\n              onClick: () => setDownDialogVisible(true)\n            }), /*#__PURE__*/_jsx(\"a\", {\n              href: \"/random\",\n              className: \"iconfont icon-touzi\"\n            }), /*#__PURE__*/_jsx(\"a\", {\n              href: \"/about\",\n              className: \"iconfont icon-about\"\n            }), /*#__PURE__*/_jsx(\"a\", {\n              href: \"https://github.com/renserve/bing\",\n              rel: \"external nofollow noopener noreferrer\",\n              target: \"_blank\",\n              className: \"iconfont icon-github\"\n            })]\n          })\n        })]\n      })]\n    }), /*#__PURE__*/_jsx(DownDialog, {\n      downloadFun: downloadFun,\n      isMobile: isMobile,\n      visible: downDialogVisible,\n      onHide: () => setDownDialogVisible(false),\n      imgInfo: img\n    })]\n  }) : /*#__PURE__*/_jsx(Error, {\n    statusCode: 404\n  });\n}","map":null,"metadata":{},"sourceType":"module"}