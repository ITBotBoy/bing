{"ast":null,"code":"const jsonfile = require('jsonfile');\n\nconst moment = require('moment');\n\nlet delayFun;\nexport default (async (req, res) => {\n  let {\n    k = 0,\n    date\n  } = req.query;\n  let sortInfo = global.sortInfo;\n\n  if (!sortInfo) {\n    try {\n      sortInfo = await jsonfile.readFileSync('bing_data/sortData.json').catch(() => ({}));\n    } catch (e) {\n      await jsonfile.writeFileSync('bing_data/sortData.json', {});\n    }\n  }\n\n  if (date && k) {\n    //延迟一小时执行\n    if (!sortInfo[date]) {\n      sortInfo[date] = {};\n      sortInfo[date][k] = 1;\n    } else {\n      sortInfo[date][k] = (sortInfo[date][k] || 0) + 1;\n    }\n\n    delayFun && clearTimeout(delayFun);\n    delayFun = setTimeout(() => {\n      delayFun = null;\n      const nowStr = moment().format('YYYY-MM-DD HH:mm:ss');\n      sortInfo['nowStr'] = nowStr;\n      jsonfile.writeFileSync('bing_data/sortData.json', sortInfo);\n    }, 60 * 60 * 1000);\n    global.sortInfo = sortInfo;\n    res.json(sortInfo[date]);\n  } else {\n    res.json(sortInfo);\n  }\n});","map":{"version":3,"sources":["E:/Future/bing/pages/api/sort.js"],"names":["jsonfile","require","moment","delayFun","req","res","k","date","query","sortInfo","global","readFileSync","catch","e","writeFileSync","clearTimeout","setTimeout","nowStr","format","json"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAIE,QAAJ;AACA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,MAAI;AAAEC,IAAAA,CAAC,GAAG,CAAN;AAASC,IAAAA;AAAT,MAAiBH,GAAG,CAACI,KAAzB;AACA,MAAIC,QAAQ,GAAEC,MAAM,CAACD,QAArB;;AACA,MAAG,CAACA,QAAJ,EAAa;AACT,QAAI;AACAA,MAAAA,QAAQ,GAAG,MAAMT,QAAQ,CAACW,YAAT,CAAsB,yBAAtB,EACZC,KADY,CACN,OAAO,EAAP,CADM,CAAjB;AAEH,KAHD,CAGC,OAAOC,CAAP,EAAU;AACP,YAAMb,QAAQ,CAACc,aAAT,CAAuB,yBAAvB,EAAiD,EAAjD,CAAN;AACH;AACJ;;AACD,MAAGP,IAAI,IAAID,CAAX,EAAa;AACT;AACA,QAAG,CAACG,QAAQ,CAACF,IAAD,CAAZ,EAAmB;AACfE,MAAAA,QAAQ,CAACF,IAAD,CAAR,GAAe,EAAf;AACAE,MAAAA,QAAQ,CAACF,IAAD,CAAR,CAAeD,CAAf,IAAkB,CAAlB;AACH,KAHD,MAGM;AACFG,MAAAA,QAAQ,CAACF,IAAD,CAAR,CAAeD,CAAf,IAAkB,CAACG,QAAQ,CAACF,IAAD,CAAR,CAAeD,CAAf,KAAqB,CAAtB,IAAyB,CAA3C;AACH;;AACDH,IAAAA,QAAQ,IAAIY,YAAY,CAACZ,QAAD,CAAxB;AACAA,IAAAA,QAAQ,GAACa,UAAU,CAAC,MAAI;AACpBb,MAAAA,QAAQ,GAAC,IAAT;AACA,YAAMc,MAAM,GAAGf,MAAM,GAAGgB,MAAT,CAAgB,qBAAhB,CAAf;AACAT,MAAAA,QAAQ,CAAC,QAAD,CAAR,GAAmBQ,MAAnB;AACAjB,MAAAA,QAAQ,CAACc,aAAT,CAAuB,yBAAvB,EAAiDL,QAAjD;AACH,KALkB,EAKjB,KAAG,EAAH,GAAM,IALW,CAAnB;AAMAC,IAAAA,MAAM,CAACD,QAAP,GAAgBA,QAAhB;AACAJ,IAAAA,GAAG,CAACc,IAAJ,CAASV,QAAQ,CAACF,IAAD,CAAjB;AACH,GAjBD,MAiBM;AACFF,IAAAA,GAAG,CAACc,IAAJ,CAASV,QAAT;AACH;AACJ,CA/BD","sourcesContent":["const jsonfile = require('jsonfile')\r\nconst moment = require('moment');\r\nlet delayFun;\r\nexport default async (req, res) => {\r\n    let { k = 0 ,date} = req.query;\r\n    let sortInfo= global.sortInfo\r\n    if(!sortInfo){\r\n        try {\r\n            sortInfo = await jsonfile.readFileSync('bing_data/sortData.json')\r\n                .catch(() => ({}))\r\n        }catch (e) {\r\n            await jsonfile.writeFileSync('bing_data/sortData.json',{})\r\n        }\r\n    }\r\n    if(date && k){\r\n        //延迟一小时执行\r\n        if(!sortInfo[date]){\r\n            sortInfo[date]={}\r\n            sortInfo[date][k]=1\r\n        }else {\r\n            sortInfo[date][k]=(sortInfo[date][k] || 0)+1\r\n        }\r\n        delayFun && clearTimeout(delayFun);\r\n        delayFun=setTimeout(()=>{\r\n            delayFun=null\r\n            const nowStr = moment().format('YYYY-MM-DD HH:mm:ss');\r\n            sortInfo['nowStr']=nowStr\r\n            jsonfile.writeFileSync('bing_data/sortData.json',sortInfo)\r\n        },60*60*1000)\r\n        global.sortInfo=sortInfo\r\n        res.json(sortInfo[date])\r\n    }else {\r\n        res.json(sortInfo)\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}