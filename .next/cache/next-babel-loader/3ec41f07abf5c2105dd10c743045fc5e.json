{"ast":null,"code":"const moment = require('moment');\n\nexport default (async (req, res) => {\n  let {\n    date = 0,\n    count = 0\n  } = req.query,\n      monthData;\n  if (!date) return res.json({\n    data: []\n  });\n  const {\n    imgArr\n  } = global; //  28\n\n  /*if(Number(date)){\r\n      console.log(date)\r\n      date=String(date).slice(0,6)\r\n      monthData=imgArr.filter(i=>String(i.date).includes(date))\r\n      //今天距离月初的天数\r\n      // count=new Date(date.slice(4), date.slice(2), 0).getDate()\r\n  }else {\r\n      const now = moment().format('YYYYMM');\r\n      monthData=imgArr.filter(i=>String(i.date).includes(now))\r\n      if(monthData.length<28){\r\n          const last=moment().subtract(1, 'month').format('YYYYMM')\r\n          const lastMonthData=imgArr.filter(i=>String(i.date).includes(last))\r\n          console.log(imgArr.length,'lastMonthData')\r\n          monthData=monthData.concat(lastMonthData)\r\n      }\r\n  }*/\n  //读取后一个月的数据保证始终超过10条\n\n  const currentFileName = date.slice(0, 6);\n  const laseFileName = moment(date || new Date()).subtract(1, 'months').format('YYYYMM');\n  const {\n    imgs: currentMonthData\n  } = await jsonfile.readFile(`bing_data/${currentFileName}.json`).catch(() => ({\n    imgs: []\n  }));\n  const {\n    imgs: lastMonthData\n  } = await jsonfile.readFile(`bing_data/${laseFileName}.json`).catch(() => ({\n    imgs: []\n  })).catch(() => ({}));\n  let startIndex = imgArr.findIndex(({\n    date: d\n  }) => date === `${d}`);\n  startIndex < 0 && (startIndex = imgArr.length - 1);\n  console.log(currentMonthData[0].date, lastMonthData[0].date);\n  res.json({\n    data: [...[...currentMonthData, ...lastMonthData].slice(Math.max(0, startIndex - (count - 1)), startIndex + 1)].reverse()\n  });\n});","map":{"version":3,"sources":["E:/Future/bing/pages/api/list.js"],"names":["moment","require","req","res","date","count","query","monthData","json","data","imgArr","global","currentFileName","slice","laseFileName","Date","subtract","format","imgs","currentMonthData","jsonfile","readFile","catch","lastMonthData","startIndex","findIndex","d","length","console","log","Math","max","reverse"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,MAAI;AAAEC,IAAAA,IAAI,GAAG,CAAT;AAAWC,IAAAA,KAAK,GAAG;AAAnB,MAAyBH,GAAG,CAACI,KAAjC;AAAA,MAAuCC,SAAvC;AACA,MAAG,CAACH,IAAJ,EAAU,OAAOD,GAAG,CAACK,IAAJ,CAAS;AAACC,IAAAA,IAAI,EAAC;AAAN,GAAT,CAAP;AACV,QAAM;AAAEC,IAAAA;AAAF,MAAaC,MAAnB,CAHiC,CAIjC;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;;AACA,QAAMC,eAAe,GAAGR,IAAI,CAACS,KAAL,CAAW,CAAX,EAAa,CAAb,CAAxB;AACA,QAAMC,YAAY,GAAGd,MAAM,CAACI,IAAI,IAAI,IAAIW,IAAJ,EAAT,CAAN,CAA2BC,QAA3B,CAAoC,CAApC,EAAsC,QAAtC,EAAgDC,MAAhD,CAAuD,QAAvD,CAArB;AACA,QAAM;AAACC,IAAAA,IAAI,EAACC;AAAN,MAA0B,MAAMC,QAAQ,CAACC,QAAT,CAAmB,aAAYT,eAAgB,OAA/C,EAAuDU,KAAvD,CAA6D,OAAO;AAACJ,IAAAA,IAAI,EAAC;AAAN,GAAP,CAA7D,CAAtC;AACA,QAAM;AAACA,IAAAA,IAAI,EAACK;AAAN,MAAuB,MAAMH,QAAQ,CAACC,QAAT,CAAmB,aAAYP,YAAa,OAA5C,EAAoDQ,KAApD,CAA0D,OAAO;AAACJ,IAAAA,IAAI,EAAC;AAAN,GAAP,CAA1D,EAC9BI,KAD8B,CACxB,OAAO,EAAP,CADwB,CAAnC;AAEA,MAAIE,UAAU,GAAGd,MAAM,CAACe,SAAP,CAAiB,CAAC;AAAErB,IAAAA,IAAI,EAAEsB;AAAR,GAAD,KAAiBtB,IAAI,KAAM,GAAEsB,CAAE,EAAhD,CAAjB;AACCF,EAAAA,UAAU,GAAG,CAAd,KAAqBA,UAAU,GAAGd,MAAM,CAACiB,MAAP,GAAc,CAAhD;AACFC,EAAAA,OAAO,CAACC,GAAR,CAAYV,gBAAgB,CAAC,CAAD,CAAhB,CAAoBf,IAAhC,EAAqCmB,aAAa,CAAC,CAAD,CAAb,CAAiBnB,IAAtD;AACAD,EAAAA,GAAG,CAACK,IAAJ,CAAS;AACPC,IAAAA,IAAI,EAAE,CAAC,GAAG,CAAC,GAAGU,gBAAJ,EAAqB,GAAGI,aAAxB,EAAuCV,KAAvC,CAA6CiB,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYP,UAAU,IAAInB,KAAK,GAAC,CAAV,CAAtB,CAA7C,EAAkFmB,UAAU,GAAG,CAA/F,CAAJ,EAAuGQ,OAAvG;AADC,GAAT;AAGD,CAjCD","sourcesContent":["const moment = require('moment');\r\nexport default async (req, res) => {\r\n  let { date = 0,count = 0 } = req.query,monthData;\r\n  if(!date) return res.json({data:[]})\r\n  const { imgArr } = global;\r\n  //  28\r\n  /*if(Number(date)){\r\n      console.log(date)\r\n      date=String(date).slice(0,6)\r\n      monthData=imgArr.filter(i=>String(i.date).includes(date))\r\n      //今天距离月初的天数\r\n      // count=new Date(date.slice(4), date.slice(2), 0).getDate()\r\n  }else {\r\n      const now = moment().format('YYYYMM');\r\n      monthData=imgArr.filter(i=>String(i.date).includes(now))\r\n      if(monthData.length<28){\r\n          const last=moment().subtract(1, 'month').format('YYYYMM')\r\n          const lastMonthData=imgArr.filter(i=>String(i.date).includes(last))\r\n          console.log(imgArr.length,'lastMonthData')\r\n          monthData=monthData.concat(lastMonthData)\r\n      }\r\n  }*/\r\n    //读取后一个月的数据保证始终超过10条\r\n    const currentFileName = date.slice(0,6)\r\n    const laseFileName = moment(date || new Date()).subtract(1,'months').format('YYYYMM');\r\n    const {imgs:currentMonthData} = await jsonfile.readFile(`bing_data/${currentFileName}.json`).catch(() => ({imgs:[]}))\r\n    const {imgs:lastMonthData} = await jsonfile.readFile(`bing_data/${laseFileName}.json`).catch(() => ({imgs:[]}))\r\n        .catch(() => ({}))\r\n    let startIndex = imgArr.findIndex(({ date: d }) => date === `${d}`);\r\n    (startIndex < 0) && (startIndex = imgArr.length-1);\r\n  console.log(currentMonthData[0].date,lastMonthData[0].date)\r\n  res.json({\r\n    data: [...[...currentMonthData,...lastMonthData].slice(Math.max(0, startIndex - (count-1)), startIndex + 1)].reverse()\r\n  })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}