{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useState, useRef } from 'react';\nimport { Modal, Radio, Spin, Select, Button, message } from 'antd';\nimport \"../styles/downDialog.scss\";\nimport download from \"../util/download\";\nconst {\n  Option\n} = Select;\n\nconst DownDialog = ({\n  isMobile,\n  visible,\n  imgInfo,\n  onHide\n}) => {\n  const {\n    0: size,\n    1: setSize\n  } = useState('1920x1080');\n  const {\n    0: imgLoading,\n    1: setImgLoading\n  } = useState(true);\n  const downLink = useRef();\n  const sizeMap = [['1920x1200', '1920x1080', '1366x768', '1280x768', '1024x768'], ['768x1280', '720x1280', '480x800']];\n\n  const updateSize = val => {\n    window.localStorage.setItem('bing_down_size', val);\n    setImgLoading(true);\n    setSize(val);\n  };\n\n  const onClickDown = () => {\n    const {\n      urlbase,\n      date\n    } = imgInfo;\n    download(`//cn.bing.com${urlbase}_${size}.jpg`, `bing_${date}_${size}.jpg`);\n    message.info('加入下载！');\n  };\n\n  useEffect(() => {\n    let size = window.localStorage.getItem('bing_down_size') || '1920x1080';\n\n    if (isMobile) {\n      size = '768x1280';\n    }\n\n    setSize(size);\n  }, [isMobile]);\n  const downImg = useRef();\n  useEffect(() => {\n    if (downImg && downImg.current && downImg.current.complete) {\n      setImgLoading(false);\n    }\n  }, [imgInfo]);\n  return /*#__PURE__*/_jsx(Modal, {\n    visible: visible,\n    onClose: onHide,\n    onCancel: onHide,\n    footer: null,\n    wrapClassName: `down-dialog mode-${isMobile && 'mobile'}`,\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"down-dialog-content\",\n      children: [imgInfo && /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(Spin, {\n          spinning: imgLoading,\n          children: /*#__PURE__*/_jsx(\"img\", {\n            ref: downImg,\n            onLoad: () => setImgLoading(false),\n            className: \"down-img\",\n            src: `//cn.bing.com${imgInfo.urlbase}_${size}.jpg`\n          })\n        }), isMobile ? /*#__PURE__*/_jsx(\"div\", {\n          className: \"select-size-container\",\n          children: /*#__PURE__*/_jsx(Select, {\n            value: size,\n            onChange: v => updateSize(v),\n            children: sizeMap.map((arr, i) => arr.map(size => /*#__PURE__*/_jsx(Option, {\n              value: size,\n              children: size\n            }, `size-${size}`)))\n          })\n        }) : /*#__PURE__*/_jsx(\"div\", {\n          className: \"select-size-container\",\n          children: sizeMap.map((arr, i) => /*#__PURE__*/_jsxs(\"div\", {\n            className: \"size-row\",\n            children: [/*#__PURE__*/_jsx(\"i\", {\n              className: `iconfont type-icon icon-${['pc', 'mobile'][i]} ${arr.indexOf(size) > -1 && 'actived'}`\n            }), /*#__PURE__*/_jsx(Radio.Group, {\n              value: size,\n              onChange: e => updateSize(e.target.value),\n              children: arr.map(size => /*#__PURE__*/_jsx(Radio.Button, {\n                value: size,\n                children: size\n              }, `${i}-${size}`))\n            })]\n          }, `size-type-${i}`))\n        }), /*#__PURE__*/_jsxs(Button, {\n          type: \"primary\",\n          className: \"down-icon\",\n          onClick: () => onClickDown(),\n          children: [/*#__PURE__*/_jsx(\"i\", {\n            className: \"iconfont icon-download\"\n          }), isMobile ? '' : '下载']\n        })]\n      }), /*#__PURE__*/_jsx(\"a\", {\n        ref: downLink,\n        href: `//cn.bing.com${imgInfo.urlbase}_${size}.jpg`,\n        download: `bing_${imgInfo.date}_${size}.jpg`\n      })]\n    })\n  });\n};\n\nexport default DownDialog;","map":null,"metadata":{},"sourceType":"module"}