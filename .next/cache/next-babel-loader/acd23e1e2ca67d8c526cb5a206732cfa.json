{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useState, useRef } from 'react';\nimport { Modal, Radio, Spin, Select, Button, message } from 'antd';\nimport \"../styles/downDialog.scss\";\nimport download from \"../util/download\";\nconst {\n  Option\n} = Select;\n\nconst DownDialog = ({\n  isMobile,\n  visible,\n  imgInfo,\n  onHide\n}) => {\n  const {\n    0: size,\n    1: setSize\n  } = useState('1920x1080');\n  const {\n    0: imgLoading,\n    1: setImgLoading\n  } = useState(true);\n  const downLink = useRef();\n  const sizeMap = [['1920x1200', '1920x1080', '1366x768', '1280x768', '1024x768'], ['768x1280', '720x1280', '480x800']];\n\n  const updateSize = val => {\n    window.localStorage.setItem('bing_down_size', val);\n    setImgLoading(true);\n    setSize(val);\n  };\n\n  const onClickDown = () => {\n    const {\n      urlbase,\n      date\n    } = imgInfo;\n    download(`//cn.bing.com${urlbase}_${size}.jpg`, `bing_${date}_${size}.jpg`);\n    message.info('加入下载！');\n  };\n\n  useEffect(() => {\n    let size = window.localStorage.getItem('bing_down_size') || '1920x1080';\n\n    if (isMobile) {\n      size = '768x1280';\n    }\n\n    setSize(size);\n  }, [isMobile]);\n  const downImg = useRef();\n  useEffect(() => {\n    if (downImg && downImg.current && downImg.current.complete) {\n      setImgLoading(false);\n    }\n  }, [imgInfo]);\n  return /*#__PURE__*/_jsx(Modal, {\n    visible: visible,\n    onClose: onHide,\n    onCancel: onHide,\n    footer: null,\n    wrapClassName: `down-dialog mode-${isMobile && 'mobile'}`,\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"down-dialog-content\",\n      children: [imgInfo && /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(Spin, {\n          spinning: imgLoading,\n          children: /*#__PURE__*/_jsx(\"img\", {\n            ref: downImg,\n            onLoad: () => setImgLoading(false),\n            className: \"down-img\",\n            src: `//cn.bing.com${imgInfo.urlbase}_${size}.jpg`\n          })\n        }), isMobile ? /*#__PURE__*/_jsx(\"div\", {\n          className: \"select-size-container\",\n          children: /*#__PURE__*/_jsx(Select, {\n            value: size,\n            onChange: v => updateSize(v),\n            children: sizeMap.map((arr, i) => arr.map(size => /*#__PURE__*/_jsx(Option, {\n              value: size,\n              children: size\n            }, `size-${size}`)))\n          })\n        }) : /*#__PURE__*/_jsx(\"div\", {\n          className: \"select-size-container\",\n          children: sizeMap.map((arr, i) => /*#__PURE__*/_jsxs(\"div\", {\n            className: \"size-row\",\n            children: [/*#__PURE__*/_jsx(\"i\", {\n              className: `iconfont type-icon icon-${['pc', 'mobile'][i]} ${arr.indexOf(size) > -1 && 'actived'}`\n            }), /*#__PURE__*/_jsx(Radio.Group, {\n              value: size,\n              onChange: e => updateSize(e.target.value),\n              children: arr.map(size => /*#__PURE__*/_jsx(Radio.Button, {\n                value: size,\n                children: size\n              }, `${i}-${size}`))\n            })]\n          }, `size-type-${i}`))\n        }), /*#__PURE__*/_jsxs(Button, {\n          type: \"primary\",\n          className: \"down-icon\",\n          onClick: () => onClickDown(),\n          children: [/*#__PURE__*/_jsx(\"i\", {\n            className: \"iconfont icon-download\"\n          }), isMobile ? '' : '下载']\n        })]\n      }), /*#__PURE__*/_jsx(\"a\", {\n        ref: downLink,\n        href: `//cn.bing.com${imgInfo.urlbase}_${size}.jpg`,\n        download: `bing_${imgInfo.date}_${size}.jpg`\n      })]\n    })\n  });\n};\n\nexport default DownDialog;","map":{"version":3,"sources":["F:/bing/Bing/components/downDialog.js"],"names":["useEffect","useState","useRef","Modal","Radio","Spin","Select","Button","message","download","Option","DownDialog","isMobile","visible","imgInfo","onHide","size","setSize","imgLoading","setImgLoading","downLink","sizeMap","updateSize","val","window","localStorage","setItem","onClickDown","urlbase","date","info","getItem","downImg","current","complete","v","map","arr","i","indexOf","e","target","value"],"mappings":"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","sourcesContent":["import { useEffect, useState, useRef } from 'react';\nimport { Modal, Radio, Spin, Select, Button, message } from 'antd';\nimport \"../styles/downDialog.scss\";\nimport download from \"../util/download\";\nconst { Option } = Select;\n\nconst DownDialog = ({ isMobile, visible, imgInfo, onHide }) => {\n  const [size, setSize] = useState('1920x1080');\n  const [imgLoading, setImgLoading] = useState(true);\n  const downLink = useRef();\n\n  const sizeMap = [\n    [\n      '1920x1200',\n      '1920x1080',\n      '1366x768',\n      '1280x768',\n      '1024x768',\n    ],\n    [\n      '768x1280',\n      '720x1280',\n      '480x800',\n    ]\n  ]\n\n  const updateSize = (val) => {\n    window.localStorage.setItem('bing_down_size', val);\n    setImgLoading(true);\n    setSize(val);\n  }\n\n  const onClickDown = () => {\n    const { urlbase, date } = imgInfo;\n    download(`//cn.bing.com${urlbase}_${size}.jpg`, `bing_${date}_${size}.jpg`);\n    message.info('加入下载！');\n  }\n\n  useEffect(() => {\n    let size = window.localStorage.getItem('bing_down_size') || '1920x1080'\n    if (isMobile) {\n      size = '768x1280';\n    }\n    setSize(size);\n  }, [isMobile])\n\n  const downImg = useRef();\n  useEffect(() => {\n    if (downImg && downImg.current && downImg.current.complete) {\n      setImgLoading(false);\n    }\n  }, [imgInfo])\n\n  return (\n    <Modal\n      visible={visible}\n      onClose={onHide}\n      onCancel={onHide}\n      footer={null}\n      wrapClassName={`down-dialog mode-${isMobile && 'mobile'}`}\n    >\n      <div className=\"down-dialog-content\">\n        { imgInfo && (\n          <div>\n            <Spin spinning={imgLoading}>\n              <img\n                ref={downImg}\n                onLoad={() => setImgLoading(false)}\n                className=\"down-img\"\n                src={`//cn.bing.com${imgInfo.urlbase}_${size}.jpg`}\n              />\n            </Spin>\n\n            {\n              isMobile ? (\n                <div className=\"select-size-container\">\n                  <Select value={size} onChange={(v) => updateSize(v)}>\n                    {\n                      sizeMap.map((arr, i) => (\n                        arr.map((size) => (\n                          <Option key={`size-${size}`} value={size}>{size}</Option>\n                        ))\n                      ))\n                    }\n                  </Select>\n                </div>\n              ) : (\n                  <div className=\"select-size-container\">\n                    {sizeMap.map((arr, i) => (\n                      <div className=\"size-row\" key={`size-type-${i}`}>\n                        <i className={`iconfont type-icon icon-${['pc', 'mobile'][i]} ${arr.indexOf(size) > -1 && 'actived'}`} />\n                        <Radio.Group value={size} onChange={(e) => updateSize(e.target.value)}>\n                          {arr.map(size => (\n                            <Radio.Button key={`${i}-${size}`} value={size}>{size}</Radio.Button>\n                          ))}\n                        </Radio.Group>\n                      </div>\n                    ))}\n                  </div>\n                )\n            }\n            <Button\n              type=\"primary\"\n              className=\"down-icon\"\n              onClick={() => onClickDown()}\n            >\n              <i className=\"iconfont icon-download\" />\n              {isMobile ? '' : '下载'}\n            </Button>\n          </div>\n        )}\n        <a ref={downLink} href={`//cn.bing.com${imgInfo.urlbase}_${size}.jpg`} download={`bing_${imgInfo.date}_${size}.jpg`}  />\n      </div>\n    </Modal>\n  )\n}\n\nexport default DownDialog;"]},"metadata":{},"sourceType":"module"}