{"ast":null,"code":"const jsonfile = require('jsonfile');\n\nconst moment = require('moment');\n\nconst {\n  cloneDeep,\n  debounce\n} = require('lodash');\n\nconst delayFun = debounce(() => {\n  const nowStr = moment().format('YYYY-MM-DD HH:mm:ss');\n  global.sortInfo['nowStr'] = nowStr;\n  jsonfile.writeFileSync('bing_data/sortData.json', global.sortInfo);\n}, 1000 * 60);\nexport default (async (req, res) => {\n  let {\n    k = 0,\n    date\n  } = req.query;\n\n  if (!global.sortInfo) {\n    try {\n      global.sortInfo = await jsonfile.readFileSync('bing_data/sortData.json');\n    } catch (e) {\n      global.sortInfo = {};\n    }\n\n    return res.json({});\n  }\n\n  const sortInfo = global.sortInfo;\n\n  if (date && k) {\n    //延迟一小时执行\n    if (!sortInfo[date]) {\n      sortInfo[date] = {};\n      sortInfo[date][k] = 1;\n    } else {\n      sortInfo[date][k] = (sortInfo[date][k] || 0) + 1;\n    }\n\n    global.sortInfo = sortInfo;\n    delayFun();\n    res.json(sortInfo[date]);\n  } else {\n    res.json(sortInfo);\n  }\n});","map":{"version":3,"sources":["E:/Future/bing/pages/api/sort.js"],"names":["jsonfile","require","moment","cloneDeep","debounce","delayFun","nowStr","format","global","sortInfo","writeFileSync","req","res","k","date","query","readFileSync","e","json"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAM;AAACE,EAAAA,SAAD;AAAWC,EAAAA;AAAX,IAAsBH,OAAO,CAAC,QAAD,CAAnC;;AACA,MAAMI,QAAQ,GAACD,QAAQ,CAAC,MAAI;AACxB,QAAME,MAAM,GAAGJ,MAAM,GAAGK,MAAT,CAAgB,qBAAhB,CAAf;AACAC,EAAAA,MAAM,CAACC,QAAP,CAAgB,QAAhB,IAA0BH,MAA1B;AACAN,EAAAA,QAAQ,CAACU,aAAT,CAAuB,yBAAvB,EAAiDF,MAAM,CAACC,QAAxD;AACH,CAJsB,EAIrB,OAAO,EAJc,CAAvB;AAKA,gBAAe,OAAOE,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,MAAI;AAAEC,IAAAA,CAAC,GAAG,CAAN;AAASC,IAAAA;AAAT,MAAiBH,GAAG,CAACI,KAAzB;;AACA,MAAG,CAACP,MAAM,CAACC,QAAX,EAAoB;AAChB,QAAI;AACAD,MAAAA,MAAM,CAACC,QAAP,GAAkB,MAAMT,QAAQ,CAACgB,YAAT,CAAsB,yBAAtB,CAAxB;AACH,KAFD,CAEC,OAAOC,CAAP,EAAU;AACPT,MAAAA,MAAM,CAACC,QAAP,GAAgB,EAAhB;AACH;;AACD,WAAOG,GAAG,CAACM,IAAJ,CAAS,EAAT,CAAP;AACH;;AACD,QAAMT,QAAQ,GAACD,MAAM,CAACC,QAAtB;;AACA,MAAGK,IAAI,IAAID,CAAX,EAAa;AACT;AACA,QAAG,CAACJ,QAAQ,CAACK,IAAD,CAAZ,EAAmB;AACfL,MAAAA,QAAQ,CAACK,IAAD,CAAR,GAAe,EAAf;AACAL,MAAAA,QAAQ,CAACK,IAAD,CAAR,CAAeD,CAAf,IAAkB,CAAlB;AACH,KAHD,MAGM;AACFJ,MAAAA,QAAQ,CAACK,IAAD,CAAR,CAAeD,CAAf,IAAkB,CAACJ,QAAQ,CAACK,IAAD,CAAR,CAAeD,CAAf,KAAqB,CAAtB,IAAyB,CAA3C;AACH;;AACDL,IAAAA,MAAM,CAACC,QAAP,GAAgBA,QAAhB;AACAJ,IAAAA,QAAQ;AACRO,IAAAA,GAAG,CAACM,IAAJ,CAAST,QAAQ,CAACK,IAAD,CAAjB;AACH,GAXD,MAWM;AACFF,IAAAA,GAAG,CAACM,IAAJ,CAAST,QAAT;AACH;AACJ,CAzBD","sourcesContent":["const jsonfile = require('jsonfile')\r\nconst moment = require('moment');\r\nconst {cloneDeep,debounce}= require('lodash')\r\nconst delayFun=debounce(()=>{\r\n    const nowStr = moment().format('YYYY-MM-DD HH:mm:ss');\r\n    global.sortInfo['nowStr']=nowStr\r\n    jsonfile.writeFileSync('bing_data/sortData.json',global.sortInfo)\r\n},1000 * 60)\r\nexport default async (req, res) => {\r\n    let { k = 0 ,date} = req.query;\r\n    if(!global.sortInfo){\r\n        try {\r\n            global.sortInfo = await jsonfile.readFileSync('bing_data/sortData.json')\r\n        }catch (e) {\r\n            global.sortInfo={}\r\n        }\r\n        return res.json({})\r\n    }\r\n    const sortInfo=global.sortInfo\r\n    if(date && k){\r\n        //延迟一小时执行\r\n        if(!sortInfo[date]){\r\n            sortInfo[date]={}\r\n            sortInfo[date][k]=1\r\n        }else {\r\n            sortInfo[date][k]=(sortInfo[date][k] || 0)+1\r\n        }\r\n        global.sortInfo=sortInfo\r\n        delayFun()\r\n        res.json(sortInfo[date])\r\n    }else {\r\n        res.json(sortInfo)\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}