{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useState, useRef } from 'react';\nimport { Modal, Radio, Spin, Select, Button, message } from 'antd';\nimport \"../styles/downDialog.scss\";\nimport download from \"../util/download\";\nimport axios from \"axios\";\nimport throttle from 'lodash/throttle';\nconst {\n  Option\n} = Select;\n\nconst DownDialog = ({\n  isMobile,\n  visible,\n  imgInfo,\n  onHide,\n  downloadFun\n}) => {\n  const {\n    0: size,\n    1: setSize\n  } = useState('1920x1080');\n  const {\n    0: imgLoading,\n    1: setImgLoading\n  } = useState(true);\n  const downLink = useRef();\n  const sizeMap = [['1920x1200', '1920x1080', '1366x768', '1280x768', '1024x768'], ['800x600', '800x480', '768x1280', '720x1280', '640x480', '480x800', '400x240', '320x240', '240x320']];\n\n  const updateSize = val => {\n    window.localStorage.setItem('bing_down_size', val);\n    setImgLoading(true);\n    setSize(val);\n  };\n\n  const onClickDown = () => {\n    const {\n      urlbase,\n      date\n    } = imgInfo;\n    download(`//cn.bing.com${urlbase}_${size}.jpg`, `bing_${date}_${size}.jpg`);\n    downloadFun(date);\n    message.info('加入下载！');\n  };\n\n  const throttleOnClickDown = throttle(onClickDown(), 3000);\n  useEffect(() => {\n    let size = window.localStorage.getItem('bing_down_size') || '1920x1080';\n\n    if (isMobile) {\n      size = '768x1280';\n    }\n\n    setSize(size);\n  }, [isMobile]);\n  const downImg = useRef();\n  useEffect(() => {\n    if (downImg && downImg.current && downImg.current.complete) {\n      setImgLoading(false);\n    }\n  }, [imgInfo]);\n  return /*#__PURE__*/_jsx(Modal, {\n    visible: visible,\n    onClose: onHide,\n    onCancel: onHide,\n    footer: null,\n    wrapClassName: `down-dialog mode-${isMobile && 'mobile'}`,\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"down-dialog-content\",\n      children: [imgInfo && /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(Spin, {\n          spinning: imgLoading,\n          children: /*#__PURE__*/_jsx(\"img\", {\n            ref: downImg,\n            onLoad: () => setImgLoading(false),\n            className: \"down-img\",\n            src: `//cn.bing.com${imgInfo.urlbase}_${size}.jpg`\n          })\n        }), isMobile ? /*#__PURE__*/_jsx(\"div\", {\n          className: \"select-size-container\",\n          children: /*#__PURE__*/_jsx(Select, {\n            value: size,\n            onChange: v => updateSize(v),\n            children: sizeMap.map((arr, i) => arr.map(size => /*#__PURE__*/_jsx(Option, {\n              value: size,\n              children: size\n            }, `size-${size}`)))\n          })\n        }) : /*#__PURE__*/_jsx(\"div\", {\n          className: \"select-size-container\",\n          children: sizeMap.map((arr, i) => /*#__PURE__*/_jsxs(\"div\", {\n            className: \"size-row\",\n            children: [/*#__PURE__*/_jsx(\"i\", {\n              className: `iconfont type-icon icon-${['pc', 'mobile'][i]} ${arr.indexOf(size) > -1 && 'actived'}`\n            }), /*#__PURE__*/_jsx(Radio.Group, {\n              value: size,\n              onChange: e => updateSize(e.target.value),\n              children: arr.map(size => /*#__PURE__*/_jsx(Radio.Button, {\n                value: size,\n                children: size\n              }, `${i}-${size}`))\n            })]\n          }, `size-type-${i}`))\n        }), /*#__PURE__*/_jsxs(Button, {\n          type: \"primary\",\n          className: \"down-icon\",\n          onClick: () => throttleOnClickDown(),\n          children: [/*#__PURE__*/_jsx(\"i\", {\n            className: \"iconfont icon-download\"\n          }), isMobile ? '' : '下载']\n        })]\n      }), /*#__PURE__*/_jsx(\"a\", {\n        ref: downLink,\n        href: `//cn.bing.com${imgInfo.urlbase}_${size}.jpg`,\n        download: `bing_${imgInfo.date}_${size}.jpg`\n      })]\n    })\n  });\n};\n\nexport default DownDialog;","map":{"version":3,"sources":["F:/bing/Bing/components/downDialog.js"],"names":["useEffect","useState","useRef","Modal","Radio","Spin","Select","Button","message","download","axios","throttle","Option","DownDialog","isMobile","visible","imgInfo","onHide","downloadFun","size","setSize","imgLoading","setImgLoading","downLink","sizeMap","updateSize","val","window","localStorage","setItem","onClickDown","urlbase","date","info","throttleOnClickDown","getItem","downImg","current","complete","v","map","arr","i","indexOf","e","target","value"],"mappings":"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","sourcesContent":["import {useEffect, useState, useRef} from 'react';\nimport {Modal, Radio, Spin, Select, Button, message} from 'antd';\nimport \"../styles/downDialog.scss\";\nimport download from \"../util/download\";\nimport axios from \"axios\";\nimport throttle from 'lodash/throttle';\nconst {Option} = Select;\n\nconst DownDialog = ({isMobile, visible, imgInfo, onHide,downloadFun}) => {\n    const [size, setSize] = useState('1920x1080');\n    const [imgLoading, setImgLoading] = useState(true);\n    const downLink = useRef();\n\n    const sizeMap = [\n        [\n            '1920x1200',\n            '1920x1080',\n            '1366x768',\n            '1280x768',\n            '1024x768',\n        ],\n        [\n            '800x600',\n            '800x480',\n            '768x1280',\n            '720x1280',\n            '640x480',\n            '480x800',\n            '400x240',\n            '320x240',\n            '240x320'\n        ]\n    ]\n\n    const updateSize = (val) => {\n        window.localStorage.setItem('bing_down_size', val);\n        setImgLoading(true);\n        setSize(val);\n    }\n\n    const onClickDown = () => {\n        const {urlbase, date} = imgInfo;\n        download(`//cn.bing.com${urlbase}_${size}.jpg`, `bing_${date}_${size}.jpg`);\n        downloadFun(date)\n        message.info('加入下载！');\n    }\n    const throttleOnClickDown = throttle(onClickDown(),3000)\n    useEffect(() => {\n        let size = window.localStorage.getItem('bing_down_size') || '1920x1080'\n        if (isMobile) {\n            size = '768x1280';\n        }\n        setSize(size);\n    }, [isMobile])\n\n    const downImg = useRef();\n    useEffect(() => {\n        if (downImg && downImg.current && downImg.current.complete) {\n            setImgLoading(false);\n        }\n    }, [imgInfo])\n\n    return (\n        <Modal\n            visible={visible}\n            onClose={onHide}\n            onCancel={onHide}\n            footer={null}\n            wrapClassName={`down-dialog mode-${isMobile && 'mobile'}`}\n        >\n            <div className=\"down-dialog-content\">\n                {imgInfo && (\n                    <div>\n                        <Spin spinning={imgLoading}>\n                            <img\n                                ref={downImg}\n                                onLoad={() => setImgLoading(false)}\n                                className=\"down-img\"\n                                src={`//cn.bing.com${imgInfo.urlbase}_${size}.jpg`}\n                            />\n                        </Spin>\n\n                        {\n                            isMobile ? (\n                                <div className=\"select-size-container\">\n                                    <Select value={size} onChange={(v) => updateSize(v)}>\n                                        {\n                                            sizeMap.map((arr, i) => (\n                                                arr.map((size) => (\n                                                    <Option key={`size-${size}`} value={size}>{size}</Option>\n                                                ))\n                                            ))\n                                        }\n                                    </Select>\n                                </div>\n                            ) : (\n                                <div className=\"select-size-container\">\n                                    {sizeMap.map((arr, i) => (\n                                        <div className=\"size-row\" key={`size-type-${i}`}>\n                                            <i className={`iconfont type-icon icon-${['pc', 'mobile'][i]} ${arr.indexOf(size) > -1 && 'actived'}`}/>\n                                            <Radio.Group value={size} onChange={(e) => updateSize(e.target.value)}>\n                                                {arr.map(size => (\n                                                    <Radio.Button key={`${i}-${size}`}\n                                                                  value={size}>{size}</Radio.Button>\n                                                ))}\n                                            </Radio.Group>\n                                        </div>\n                                    ))}\n                                </div>\n                            )\n                        }\n                        <Button\n                            type=\"primary\"\n                            className=\"down-icon\"\n                            onClick={() => throttleOnClickDown()}\n                        >\n                            <i className=\"iconfont icon-download\"/>\n                            {isMobile ? '' : '下载'}\n                        </Button>\n                    </div>\n                )}\n                <a ref={downLink} href={`//cn.bing.com${imgInfo.urlbase}_${size}.jpg`}\n                   download={`bing_${imgInfo.date}_${size}.jpg`}/>\n            </div>\n        </Modal>\n    )\n}\n\nexport default DownDialog;\n"]},"metadata":{},"sourceType":"module"}